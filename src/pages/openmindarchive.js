import WhitePillButton from "../components/Buttons/wpillbutton"
import React, { useState, useContext, useEffect } from "react";
import axios from "axios"
import Head from 'next/head';
import Context from "../components/Context/context"
// use https://www.npmjs.com/package/react-scrollable-list if issues with larger lists
const Scroll = require('react-scroll');
const scroll = Scroll.animateScroll;

const OMA = () => {
    const context = useContext(Context);

    const [topic, setTopic]  = useState('');
    const [allTopics, setAllTopics]  = useState([]); // [["omid", user_id, "body", time_created]]

    useEffect(() => {
        getTopics(-1); // GET everything from open mind api

        const interval = setInterval(() => {
            getTopics(-1)
        }, 10000)

        return () => clearInterval(interval);
    }, []);

    useEffect(() => {
        scroll.scrollToBottom({
            containerId: 'topic-container',
            duration: 0,
        });
    }, [allTopics]);

    const handleSubmit = (e) => {
        e.preventDefault();

        if (context.profile && context.profile.isVerified){
            const sendTopic = {
                user_id: context.profile.uid,
                body:topic,
            };

            axios.post('/api/openmind', sendTopic)
                .then((res) => {
                    setTopic('');
                    getTopics(-1);
                })
                .catch((err) => console.log(err));
        } else
            context.handleToggleCard(false, true);
    }

    const getTopics = (lastId) => {
        const getRecentTopics = {
            params: {
                last_id: lastId
            }
        }

        axios.get('/api/openmind', getRecentTopics)
            .then((res) => setAllTopics([...res.data]))
            .catch((err) => console.log(err));
    }

    return (
        <>  
          <Head>
            <title>Open Mind Archive</title>
          </Head>
          <div className="flex flex-col md:flex-row justify-around px-2 mx-6 md:mx-12 xl:mx-24">
            <div className="w-full md:w-2/5 md:mt-24 mb-8">
              <p className="my-4 sm:my-8">Open Mind Archive</p>
              <p className="leading-snug text-4xl lg:mt-24 mb-4">What's a topic you're curious to learn more about?</p>
              <p className="w-11/12">A curiousity bank generated by the Schefs community.</p>
            </div>

            <div className="flex flex-col w-full md:w-2/5 md:mx-24 pb-4 lg:pb-8 h-screen/2 md:h-screen/1.25">
                <div id="topic-container" className="overflow-y-scroll justify-center">
                  <ul className="m-auto text-center">
                    {allTopics.map(topic => (
                         <li key={topic.omid}>{topic.body}</li>
                    ))}
                  </ul>
                </div>

                <form onSubmit={handleSubmit}>
                  <div className="flex items-end justify-center">
                    <input
                      className="w-full md:w-2/3 lg:w-1/3 pt-4 border-b border-black focus:outline-none mr-1"
                      type="text"
                      value={topic}
                      onChange={(e) => setTopic(e.target.value)}
                      aria-label="Add a topic"
                    />
                    <WhitePillButton handleClick={handleSubmit} padding="px-4 flex" type="submit" text="POST" size="lg" />
                  </div>
                </form>
            </div>
          </div>
        </>
    );
};

export default OMA;
