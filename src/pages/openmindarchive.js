import WhitePillButton from "../components/Buttons/wpillbutton"
import React, { useState, useContext, useEffect } from "react";
import axios from "axios"
import Head from 'next/head';
import Context from "../components/Context/context"
// use https://www.npmjs.com/package/react-scrollable-list if issues with larger lists
const Scroll = require('react-scroll');
const scroll = Scroll.animateScroll;

const OMA = () => {
    const context = useContext(Context);

    const [topic, setTopic]  = useState('');
    const [allTopics, setAllTopics]  = useState([]); // [["omid", user_id, "body", time_created]]

    useEffect(() => {
        getTopics(-1); // GET everything from open mind api

        const interval = setInterval(() => {
            getTopics(-1)
        }, 10000)

        return () => clearInterval(interval);
    }, []);

    const handleSubmit = () => {
        if (context.profile && context.profile.isVerified){
            const sendTopic = {
                user_id: context.profile.uid,
                body:topic,
            };

            axios.post('/api/openmind', sendTopic)
                .then((res) => {
                    setTopic('');
                    getTopics(-1);
                })
                .catch((err) => console.log(err));
        } else
            context.handleToggleCard(false, true);
    }

    const getTopics = (lastId) => {
        const getRecentTopics = {
            params: {
                last_id: lastId
            }
        }

        axios.get('/api/openmind', getRecentTopics)
            .then((res)=>{
                setAllTopics([...res.data]);
                scroll.scrollToBottom({
                    containerId: 'topic-container',
                    duration: 0,
                });
            })
            .catch((err) => console.log(err));
    }

    return (
        <>  
          <Head>
            <title>Open Mind Archive</title>
          </Head>
          <div className="grid sm:grid-cols-2">
            <div className="px-2 mx-6 md:mx-12 xl:mx-24 col-span-1">
              <p className="sm:my-8">Open Mind Archive</p>
              <p className="leading-snug text-4xl sm:mt-24 sm:mb-2">What's a topic you're curious to learn more about?</p>
              <p className="">A curiousity bank generated by the Schefs community.</p>
            </div>
            <div className="col-span-1">
              <div className="grid rows-7 h-screen/1.25 pb-4">
                <div id="topic-container" className="flex overflow-y-scroll row-span-6">
                  <ul className="m-auto text-center">
                    {allTopics.map(topic => (
                         <li key={topic.omid}>{topic.body}</li>
                    ))}
                  </ul>
                </div>
                <div className="flex row-span-1 items-end justify-center">
                  <input
                    className="w-1/3 pt-4 border-b border-black focus:outline-none"
                    type="text"
                    value={topic}
                    onChange={(e) => setTopic(e.target.value)}
                    aria-label="Add a topic"
                  />
                  <WhitePillButton handleClick={handleSubmit} padding="px-4 flex" type="button" text="POST" size="lg" />
                </div>
              </div>
            </div>
          </div>
        </>
    );
};

export default OMA;
